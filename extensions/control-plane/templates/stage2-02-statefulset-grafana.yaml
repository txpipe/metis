apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: grafana
  namespace: '{{ .Values.namespace }}'
  labels:
    app.kubernetes.io/component: o11y
    app.kubernetes.io/name: grafana
spec:
  replicas: 1
  serviceName: grafana
  selector:
    matchLabels:
      app.kubernetes.io/component: o11y
      app.kubernetes.io/name: grafana
  volumeClaimTemplates:
  - metadata:
      name: grafana-storage
    spec:
      accessModes:
      - ReadWriteOnce
{{- with .Values.grafana.persistence.resources }}
      resources:
{{ toYaml . | indent 8 }}
{{- end }}
      storageClassName: '{{ .Values.storageClass }}'
  template:
    metadata:
      labels:
        app.kubernetes.io/component: o11y
        app.kubernetes.io/name: grafana
    spec:
      volumes:
      - name: tmp-plugins
        emptyDir:
          medium: Memory
      - name: grafana-config
        configMap:
          name: grafana-config
      containers:
      - name: grafana
        image: grafana/grafana:9.2.6
        ports:
        - name: http
          containerPort: 3000
{{- with .Values.grafana.resources }}
        resources:
{{ toYaml . | indent 10 }}
{{- end }}
        volumeMounts:
        - name: grafana-storage
          mountPath: /var/lib/grafana
        - name: tmp-plugins
          mountPath: /tmp
        - name: grafana-config
          mountPath: /etc/grafana
        readinessProbe:
          httpGet:
            path: /api/health
            port: http
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
      securityContext:
        runAsUser: 65534
        runAsNonRoot: true
        fsGroup: 65534
{{- with .Values.grafana.tolerations }}
      tolerations:
{{ toYaml . | indent 6 }}
{{- end }}
