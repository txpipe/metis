{{- $fullName := include "midnight.fullname" . -}}
{{- $selectorLabels := include "midnight.selectorLabels" . -}}
{{- $serviceAccountName := include "midnight.serviceAccountName" . -}}
{{- $chainConfigName := include "midnight.chainConfigName" . -}}
{{- $dbSyncSecretName := include "midnight.dbSyncSecretName" . -}}
{{- $dbSyncSecretKey := include "midnight.dbSyncSecretKey" . -}}
{{- $nodeKeySecretName := include "midnight.nodeKeySecretName" . -}}
{{- $nodeKeySecretKey := include "midnight.nodeKeySecretKey" . -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "midnight.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.node.replicas | int }}
  selector:
    matchLabels:
{{- $selectorLabels | nindent 6 }}
  serviceName: {{ printf "%s-headless" $fullName }}
  template:
    metadata:
      labels:
{{- $selectorLabels | nindent 8 }}
      {{- $checksum := "" -}}
      {{- if and .Values.chainConfig.create .Values.chainConfig.data }}
      {{- $checksum = include (print $.Template.BasePath "/configmap-chain-config.yaml") . | sha256sum -}}
      {{- end }}
      {{- if or $checksum .Values.podAnnotations }}
      annotations:
        {{- if $checksum }}
        checksum/config: {{ $checksum }}
        {{- end }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}
    spec:
      serviceAccountName: {{ $serviceAccountName }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.priorityClassName }}
      priorityClassName: {{ . }}
      {{- end }}
      {{- with .Values.node.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ . }}
      {{- end }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: midnight
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- with .Values.node.extraArgs }}
          args:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
            - name: CFG_PRESET
              value: {{ .Values.node.cfgPreset | quote }}
            - name: BOOTNODES
              value: {{ include "midnight.bootnodes" . | quote }}
            - name: APPEND_ARGS
              value: {{ include "midnight.appendArgs" . | quote }}
            {{- if $dbSyncSecretName }}
            - name: DB_SYNC_POSTGRES_CONNECTION_STRING
              valueFrom:
                secretKeyRef:
                  name: {{ $dbSyncSecretName }}
                  key: {{ $dbSyncSecretKey }}
            {{- else if .Values.dbSync.connectionString }}
            - name: DB_SYNC_POSTGRES_CONNECTION_STRING
              value: {{ .Values.dbSync.connectionString | quote }}
            {{- end }}
            {{- if $nodeKeySecretName }}
            - name: NODE_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ $nodeKeySecretName }}
                  key: {{ $nodeKeySecretKey }}
            {{- else if .Values.nodeKey.value }}
            - name: NODE_KEY
              value: {{ .Values.nodeKey.value | quote }}
            {{- end }}
            {{- with .Values.node.extraEnv }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          ports:
            - name: rpc
              containerPort: {{ .Values.service.rpcPort }}
              protocol: TCP
            - name: p2p
              containerPort: {{ .Values.service.p2pPort }}
              protocol: TCP
            - name: metrics
              containerPort: {{ .Values.service.metricsPort }}
              protocol: TCP
          volumeMounts:
            - name: chain-data
              mountPath: /node
            - name: runtime-data
              mountPath: /data
            {{- if $chainConfigName }}
            - name: chain-config
              mountPath: /pc-chain-config.json
              subPath: {{ required ".Values.chainConfig.filename is required" .Values.chainConfig.filename }}
            {{- end }}
            {{- with .Values.node.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            {{- toYaml (omit .Values.livenessProbe "enabled") | nindent 12 }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            {{- toYaml (omit .Values.readinessProbe "enabled") | nindent 12 }}
          {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: runtime-data
          emptyDir: {}
        {{- if and $chainConfigName }}
        - name: chain-config
          configMap:
            name: {{ $chainConfigName }}
            items:
              - key: {{ required ".Values.chainConfig.filename is required" .Values.chainConfig.filename }}
                path: {{ .Values.chainConfig.filename }}
        {{- end }}
        {{- if and .Values.persistence.enabled .Values.persistence.existingClaim }}
        - name: chain-data
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim }}
        {{- else if not .Values.persistence.enabled }}
        - name: chain-data
          emptyDir: {}
        {{- end }}
        {{- with .Values.node.extraVolumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
  {{- if and .Values.persistence.enabled (not .Values.persistence.existingClaim) }}
  volumeClaimTemplates:
    - metadata:
        name: chain-data
        {{- with .Values.persistence.annotations }}
        annotations:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      spec:
        accessModes:
          {{- toYaml .Values.persistence.accessModes | nindent 10 }}
        {{- if .Values.persistence.storageClass }}
        storageClassName: {{ .Values.persistence.storageClass }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
  {{- end }}
