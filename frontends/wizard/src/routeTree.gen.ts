/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as StepsRouteImport } from './routes/_steps'
import { Route as StepsIndexRouteImport } from './routes/_steps/index'
import { Route as Steps4RouteImport } from './routes/_steps/4'
import { Route as Steps3RouteImport } from './routes/_steps/3'
import { Route as Steps2RouteImport } from './routes/_steps/2'

const StepsRoute = StepsRouteImport.update({
  id: '/_steps',
  getParentRoute: () => rootRouteImport,
} as any)
const StepsIndexRoute = StepsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => StepsRoute,
} as any)
const Steps4Route = Steps4RouteImport.update({
  id: '/4',
  path: '/4',
  getParentRoute: () => StepsRoute,
} as any)
const Steps3Route = Steps3RouteImport.update({
  id: '/3',
  path: '/3',
  getParentRoute: () => StepsRoute,
} as any)
const Steps2Route = Steps2RouteImport.update({
  id: '/2',
  path: '/2',
  getParentRoute: () => StepsRoute,
} as any)

export interface FileRoutesByFullPath {
  '/2': typeof Steps2Route
  '/3': typeof Steps3Route
  '/4': typeof Steps4Route
  '/': typeof StepsIndexRoute
}
export interface FileRoutesByTo {
  '/2': typeof Steps2Route
  '/3': typeof Steps3Route
  '/4': typeof Steps4Route
  '/': typeof StepsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_steps': typeof StepsRouteWithChildren
  '/_steps/2': typeof Steps2Route
  '/_steps/3': typeof Steps3Route
  '/_steps/4': typeof Steps4Route
  '/_steps/': typeof StepsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/2' | '/3' | '/4' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/2' | '/3' | '/4' | '/'
  id:
    | '__root__'
    | '/_steps'
    | '/_steps/2'
    | '/_steps/3'
    | '/_steps/4'
    | '/_steps/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  StepsRoute: typeof StepsRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_steps': {
      id: '/_steps'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof StepsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_steps/': {
      id: '/_steps/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof StepsIndexRouteImport
      parentRoute: typeof StepsRoute
    }
    '/_steps/4': {
      id: '/_steps/4'
      path: '/4'
      fullPath: '/4'
      preLoaderRoute: typeof Steps4RouteImport
      parentRoute: typeof StepsRoute
    }
    '/_steps/3': {
      id: '/_steps/3'
      path: '/3'
      fullPath: '/3'
      preLoaderRoute: typeof Steps3RouteImport
      parentRoute: typeof StepsRoute
    }
    '/_steps/2': {
      id: '/_steps/2'
      path: '/2'
      fullPath: '/2'
      preLoaderRoute: typeof Steps2RouteImport
      parentRoute: typeof StepsRoute
    }
  }
}

interface StepsRouteChildren {
  Steps2Route: typeof Steps2Route
  Steps3Route: typeof Steps3Route
  Steps4Route: typeof Steps4Route
  StepsIndexRoute: typeof StepsIndexRoute
}

const StepsRouteChildren: StepsRouteChildren = {
  Steps2Route: Steps2Route,
  Steps3Route: Steps3Route,
  Steps4Route: Steps4Route,
  StepsIndexRoute: StepsIndexRoute,
}

const StepsRouteWithChildren = StepsRoute._addFileChildren(StepsRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  StepsRoute: StepsRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
